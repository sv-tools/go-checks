analyzers:
    asmdecl: {}
    assign: {}
    atomic: {}
    atomicalign: {}
    bools: {}
    buildtag: {}
    cgocall: {}
    composites:
        whitelist: "true"
    copylocks: {}
    deepequalerrors: {}
    directive: {}
    errcheck:
        assert: "false"
        blank: "false"
        exclude: ""
        excludeonly: "false"
    errorsas: {}
    fieldalignment: {}
    framepointer: {}
    httpresponse: {}
    ifaceassert: {}
    loopclosure: {}
    lostcancel: {}
    nilfunc: {}
    nilness: {}
    printf:
        funcs: (*log.Logger).Fatal,(*log.Logger).Fatalf,(*log.Logger).Fatalln,(*log.Logger).Panic,(*log.Logger).Panicf,(*log.Logger).Panicln,(*log.Logger).Print,(*log.Logger).Printf,(*log.Logger).Println,(*testing.common).Error,(*testing.common).Errorf,(*testing.common).Fatal,(*testing.common).Fatalf,(*testing.common).Log,(*testing.common).Logf,(*testing.common).Skip,(*testing.common).Skipf,(testing.TB).Error,(testing.TB).Errorf,(testing.TB).Fatal,(testing.TB).Fatalf,(testing.TB).Log,(testing.TB).Logf,(testing.TB).Skip,(testing.TB).Skipf,fmt.Errorf,fmt.Fprint,fmt.Fprintf,fmt.Fprintln,fmt.Print,fmt.Printf,fmt.Println,fmt.Sprint,fmt.Sprintf,fmt.Sprintln,log.Fatal,log.Fatalf,log.Fatalln,log.Panic,log.Panicf,log.Panicln,log.Print,log.Printf,log.Println,runtime/trace.Logf
    reflectvaluecompare: {}
    shadow:
        strict: "false"
    shift: {}
    sigchanyzer: {}
    sortslice: {}
    stdmethods: {}
    stringintconv: {}
    structtag: {}
    testinggoroutine: {}
    tests: {}
    timeformat: {}
    unmarshal: {}
    unreachable: {}
    unsafeptr: {}
    unusedresult:
        funcs: context.WithCancel,context.WithDeadline,context.WithTimeout,context.WithValue,errors.New,fmt.Errorf,fmt.Sprint,fmt.Sprintf,sort.Reverse
        stringmethods: Error,String
    unusedwrite: {}
    usesgenerics: {}
debug: ""
cpuprofile: ""
memprofile: ""
trace: ""
test: false
fix: false
